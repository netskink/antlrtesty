#
# Variables
#
outdir = out
srcdir = antlr

# github codespace
#CLASSPATH=.:/workspaces/antlrtesty/jars/antlr-4.13.1-complete.jar:$outdir:$outdir/$srcdir
# macos terminal
CLASSPATH = .:/Users/davis/progs/github/antlrtesty/jars/antlr-4.13.1-complete.jar:$outdir:$outdir/$srcdir

# ninja does not respect shell aliases
# github code space
#antlr4 = java -jar /workspaces/antlrtesty/jars/antlr-4.13.1-complete.jar -o $outdir
# macos terminal
antlr4 = java -jar /Users/davis/progs/github/antlrtesty/jars/antlr-4.13.1-complete.jar -o $outdir

# grun
grun = java org.antlr.v4.runtime.misc.TestRig



# rule to transform *.g4 files into *java, *.interp and *.tokens files
# $in comes from the build statement which uses this rule.
rule antlr_r
  command = $antlr4 $in

# Build statement
# Note the use of dollar sign to escape new lines and variables.
# this one makes the java files based upon the grammar antlr/Expr.g4
# 
# input: 
#   Expr.g4
# output: 
#   Expr.interp
#   Expr.tokens
#   ExprBaseListener.java
#   ExprLexer.interp
#   ExprLexer.java
#   ExprLexer.tokens
#   ExprListener.java
#   ExprParser.java
#
build $
$outdir/$srcdir/Expr.interp $
$outdir/$srcdir/Expr.tokens $
$outdir/$srcdir/ExprBaseListener.java $
$outdir/$srcdir/ExprLexer.interp $
$outdir/$srcdir/ExprLexer.java $
$outdir/$srcdir/ExprLexer.tokens $
$outdir/$srcdir/ExprListener.java $
$outdir/$srcdir/ExprParser.java $
$outdir/$srcdir $
: antlr_r $srcdir/Expr.g4


# rule to compile java code
#rule jc
#  command = javac -d $outdir --class-path $CLASSPATH $in
#  description = javac $outdir

# depends upon nothing. Makes class
# * ArrayInitLexer
#build $outdir/ArrayInitLexer.class: jc $outdir/$srcdir/ArrayInitLexer.java

# depends upon nothing. Makes class files:
# * ArrayInitBaseListener
# * ArrayInitListener
# * ArrayInitParser
# * ArrayInitParser$InitContext
# * ArrayInitParser$ValueContext
#build $outdir/ArrayInitParser$$InitContext.class $outdir/ArrayInitParser$$ValueContext.class $outdir/ArrayInitBaseListener.class: jc $outdir/$srcdir/ArrayInitBaseListener.java

# depends upon nothing. Makes class files:
# * ArrayInitListener
# * ArrayInitParser
# * ArrayInitParser$InitContext
# * ArrayInitParser$ValueContext
#build $outdir/ArrayInitListener.class: jc $outdir/$srcdir/ArrayInitListener.java

# depends upon nothing.  Makes class files:
# * ArrayInitListener
# * ArrayInitParser
# * ArrayInitParser$InitContext
# * ArrayInitParser$ValueContext
#build $outdir/ArrayInitParser.class: jc $outdir/$srcdir/ArrayInitParser.java



#
# Testing
#

#rule testit
#  command = cd $outdir; echo {1, 2, 3} | $grun ArrayInit init -tokens 
#  description = Testing the tokenizer

# he does not generate outdir
#build $outdir do_testit: testit $outdir/ArrayInitParser$$InitContext.class
