#
# Variables
#
outdir = out
srcdir = starter

# github codespace
#CLASSPATH=.:/workspaces/antlrtesty/jars/antlr-4.13.1-complete.jar:$outdir:$outdir/$srcdir
# macos terminal
CLASSPATH = .:/Users/davis/progs/github/antlrtesty/jars/antlr-4.13.1-complete.jar:$outdir:$outdir/$srcdir

# ninja does not respect shell aliases
# github code space
#antlr4 = java -jar /workspaces/antlrtesty/jars/antlr-4.13.1-complete.jar -o $outdir
# macos terminal
antlr4 = java -jar /Users/davis/progs/github/antlrtesty/jars/antlr-4.13.1-complete.jar -o $outdir

# grun
grun = java org.antlr.v4.runtime.misc.TestRig



# rule to transform *.g4 files into *java, *.interp and *.tokens files
rule antlr_r
  command = $antlr4 $in

# Build statement
# Note the use of dollar sign to escape new lines and variables.
build $
$outdir/$srcdir/ArrayInit.tokens $
$outdir/$srcdir/ArrayInitLexer.tokens $
$outdir/$srcdir/ArrayInit.interp $
$outdir/$srcdir/ArrayInitLexer.interp $
$outdir/$srcdir/ArrayInitBaseListener.java $
$outdir/$srcdir/ArrayInitLexer.java $
$outdir/$srcdir/ArrayInitListener.java $
$outdir/$srcdir/ArrayInitParser.java $
$outdir/$srcdir $
: antlr_r $srcdir/ArrayInit.g4


# rule to compile java code
rule jc
  command = javac -d $outdir --class-path $CLASSPATH $in
  description = javac $outdir

# depends upon nothing. Makes class
# * ArrayInitLexer
build $outdir/ArrayInitLexer.class: jc $outdir/$srcdir/ArrayInitLexer.java

# depends upon nothing. Makes class files:
# * ArrayInitBaseListener
# * ArrayInitListener
# * ArrayInitParser
# * ArrayInitParser$InitContext
# * ArrayInitParser$ValueContext
build $outdir/ArrayInitParser$$InitContext.class $outdir/ArrayInitParser$$ValueContext.class $outdir/ArrayInitBaseListener.class: jc $outdir/$srcdir/ArrayInitBaseListener.java

# depends upon nothing. Makes class files:
# * ArrayInitListener
# * ArrayInitParser
# * ArrayInitParser$InitContext
# * ArrayInitParser$ValueContext
build $outdir/ArrayInitListener.class: jc $outdir/$srcdir/ArrayInitListener.java

# depends upon nothing.  Makes class files:
# * ArrayInitListener
# * ArrayInitParser
# * ArrayInitParser$InitContext
# * ArrayInitParser$ValueContext
build $outdir/ArrayInitParser.class: jc $outdir/$srcdir/ArrayInitParser.java



#
# Testing
#

rule testit
  command = cd $outdir; echo {1, 2, 3} | $grun ArrayInit init -tokens 
  description = Testing the tokenizer

# he does not generate outdir
build $outdir do_testit: testit $outdir/ArrayInitParser$$InitContext.class
